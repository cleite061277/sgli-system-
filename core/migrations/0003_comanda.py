# Generated by Django 4.2.8 on 2025-09-27 13:45

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_imovel_locatario_usuario_avatar_usuario_cpf_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comanda',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único do registro', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora da criação do registro', verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização do registro', verbose_name='Data de Atualização')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo (soft delete)', verbose_name='Ativo')),
                ('numero_comanda', models.CharField(help_text='Número único da comanda', max_length=50, unique=True, verbose_name='Número da Comanda')),
                ('mes_referencia', models.PositiveIntegerField(help_text='Mês de referência da cobrança (1-12)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Mês de Referência')),
                ('ano_referencia', models.PositiveIntegerField(help_text='Ano de referência da cobrança', validators=[django.core.validators.MinValueValidator(2020), django.core.validators.MaxValueValidator(2050)], verbose_name='Ano de Referência')),
                ('status', models.CharField(choices=[('PENDING', 'Pendente'), ('PAID', 'Paga'), ('OVERDUE', 'Vencida'), ('PARTIAL', 'Parcialmente Paga'), ('CANCELLED', 'Cancelada')], default='PENDING', help_text='Status atual da comanda', max_length=20, verbose_name='Status')),
                ('data_vencimento', models.DateField(help_text='Data de vencimento da comanda', verbose_name='Data de Vencimento')),
                ('valor_aluguel', models.DecimalField(decimal_places=2, help_text='Valor do aluguel no mês de referência', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor do Aluguel')),
                ('valor_condominio', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Valor do condomínio no mês de referência', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor do Condomínio')),
                ('valor_iptu', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Valor proporcional do IPTU no mês', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor do IPTU')),
                ('valor_administracao', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Taxa de administração da imobiliária', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Taxa de Administração')),
                ('outros_creditos', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Créditos diversos (valores negativos reduzem o total)', max_digits=10, verbose_name='Outros Créditos')),
                ('outros_debitos', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Débitos diversos (multas, juros, etc.)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Outros Débitos')),
                ('multa', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Multa por atraso no pagamento', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Multa')),
                ('juros', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Juros por atraso no pagamento', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Juros')),
                ('desconto', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Desconto aplicado na comanda', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Desconto')),
                ('data_pagamento', models.DateField(blank=True, help_text='Data efetiva do pagamento', null=True, verbose_name='Data de Pagamento')),
                ('valor_pago', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Valor efetivamente pago', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor Pago')),
                ('forma_pagamento', models.CharField(blank=True, help_text='Forma de pagamento utilizada', max_length=100, verbose_name='Forma de Pagamento')),
                ('comprovante_pagamento', models.FileField(blank=True, help_text='Arquivo do comprovante de pagamento', null=True, upload_to='comprovantes/', verbose_name='Comprovante de Pagamento')),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre a comanda', verbose_name='Observações')),
                ('locacao', models.ForeignKey(help_text='Contrato de locação associado', on_delete=django.db.models.deletion.PROTECT, related_name='comandas', to='core.locacao', verbose_name='Locação')),
            ],
            options={
                'verbose_name': 'Comanda',
                'verbose_name_plural': 'Comandas',
                'db_table': 'core_comanda',
                'ordering': ['-ano_referencia', '-mes_referencia'],
                'unique_together': {('locacao', 'mes_referencia', 'ano_referencia')},
            },
        ),
    ]
